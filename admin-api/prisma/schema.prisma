generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPER_ADMIN
  ADMIN
  MODERATOR
  VIEWER
}

enum ReportStatus {
  PENDING
  RESOLVED
  REJECTED
}

enum UserStatus {
  ACTIVE
  SUSPENDED
  DELETED
}

enum Severity {
  LOW
  MEDIUM
  HIGH
}

model AdminUser {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  name         String
  role         Role      @default(VIEWER)
  lastLoginAt  DateTime?
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  auditLogs    AuditLog[]
  handledReports Report[]
}

model AuditLog {
  id         String   @id @default(cuid())
  actorId    String
  actor      AdminUser @relation(fields: [actorId], references: [id])
  action     String
  entityType String
  entityId   String?
  meta       Json?
  ip         String?
  userAgent  String?
  createdAt  DateTime @default(now())
  
  @@index([actorId])
  @@index([entityType, entityId])
  @@index([createdAt])
}

model BannedWord {
  id        String   @id @default(cuid())
  word      String   @unique
  severity  Severity
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([word])
}

model Announcement {
  id        String    @id @default(cuid())
  title     String
  body      String
  isActive  Boolean   @default(false)
  startsAt  DateTime?
  endsAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  @@index([isActive, startsAt, endsAt])
}

model Report {
  id              String       @id @default(cuid())
  reporterUserId  String
  targetUserId    String
  category        String
  detail          String
  status          ReportStatus @default(PENDING)
  handledBy       String?
  handler         AdminUser?   @relation(fields: [handledBy], references: [id])
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  
  @@index([status])
  @@index([reporterUserId])
  @@index([targetUserId])
}

model AppUser {
  id        String     @id @default(cuid())
  email     String     @unique
  nickname  String
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  
  @@index([email])
  @@index([status])
}